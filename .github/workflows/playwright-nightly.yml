name: Playwright Tests Nightly
on:
  schedule:
    - cron: '0 0 * * *'  # Run at midnight UTC every day
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    name: Run Playwright Tests
    runs-on: ubuntu-latest
    container:
      image: public.ecr.aws/amazonlinux/amazonlinux:2023
    steps:
      - name: Install system dependencies
        run: |
          dnf update -y
          dnf install -y nodejs nodejs-devel npm git
          dnf groupinstall -y "Development Tools"
          dnf install -y xorg-x11-server-Xvfb libX11 libXcomposite libXcursor libXdamage libXext \
            libXi libXtst cups-libs libXrandr libXScrnSaver libXinerama \
            libxkbcommon dbus-libs atk at-spi2-atk gtk3 alsa-lib pango \
            mesa-libgbm
            
      - uses: actions/checkout@v4
      
      - name: Install project dependencies
        run: |
          # Install project dependencies
          npm install
          
          # Install Playwright with Chromium
          npx playwright install chromium --with-deps
          
      - name: Move tests to regression folder
        run: |
          mkdir -p tests/regression
          mv static/HomepageTest.spec.ts tests/regression/homepage.spec.ts
          mv static/RegistrationPageTest.spec.ts tests/regression/registration.spec.ts
          
      - name: Run Playwright tests
        env:
          PLAYWRIGHT_HEADLESS: true
          DISPLAY: ':99'
          DEBUG: pw:api
        run: |
          # Start Xvfb
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          
          echo "Running tests with custom reporter..."
          npx playwright test \
            tests/regression/homepage.spec.ts \
            tests/regression/registration.spec.ts \
            --config=playwright.config.ts \
            --workers=1 \
            --retries=2 \
            --reporter=./custom-reporter.ts
        
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results
          path: |
            test-results/
            playwright-report/
          retention-days: 30
          
  deploy:
    needs: test
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Download test results
        uses: actions/download-artifact@v4
        with:
          name: playwright-results
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
