name: Playwright Tests Nightly
on:
  schedule:
    - cron: '0 0 * * *'  # Run at midnight UTC every day
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    name: Run Playwright Tests
    runs-on: ubuntu-latest
    container:
      image: amazonlinux:2023
      
    steps:
      - name: Install system dependencies
        run: |
          dnf update -y
          dnf groupinstall -y "Development Tools"
          dnf install -y nodejs nodejs-devel npm git
          
          # Install browser dependencies
          dnf install -y \
            alsa-lib \
            atk \
            cups-libs \
            gtk3 \
            ipa-gothic-fonts \
            libXcomposite \
            libXcursor \
            libXdamage \
            libXext \
            libXi \
            libXrandr \
            libXScrnSaver \
            libXtst \
            mesa-libgbm \
            pango \
            xorg-x11-fonts-100dpi \
            xorg-x11-fonts-75dpi \
            xorg-x11-fonts-cyrillic \
            xorg-x11-fonts-misc \
            xorg-x11-fonts-Type1 \
            xorg-x11-utils \
            nss \
            libdrm \
            libgbm \
            xorg-x11-server-Xvfb \
            dbus-glib \
            libXinerama \
            libxkbcommon \
            libwayland-client \
            libwayland-cursor \
            libxkbcommon-x11 \
            xorg-x11-xauth
          
      - uses: actions/checkout@v4
      
      - name: Install dependencies
        run: |
          npm ci
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1 npm install playwright
          
      - name: Install browsers manually
        run: |
          npx playwright install chromium firefox webkit --with-deps
          
      - name: Clean old reports
        run: |
          rm -rf test-results/custom-report/
          rm -rf playwright-report/
          
      - name: Run Playwright tests
        env:
          PLAYWRIGHT_HEADLESS: true
        run: npx playwright test HomepageTest.spec.ts RegistrationPageTest.spec.ts
        
      - name: List test results
        if: always()
        run: ls -la test-results/custom-report/
        
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: test-results/custom-report/
        
  deploy:
    needs: test
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Clean deployment directory
        run: |
          rm -rf ./*
          
      - name: Download test results
        uses: actions/download-artifact@v4
        with:
          name: test-report
          
      - name: List files
        run: ls -la
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
