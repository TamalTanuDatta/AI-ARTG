name: Playwright Tests Nightly
on:
  schedule:
    - cron: '0 0 * * *'  # Run at midnight UTC every day
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    name: Run Playwright Tests
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.41.2-jammy
      
    steps:
      - uses: actions/checkout@v4
      
      - name: Debug Environment
        run: |
          pwd
          ls -la
          node --version
          npm --version
          
      - name: Install dependencies
        run: |
          npm ci
          npx playwright install chromium
          npm install --save-dev typescript @types/node @playwright/test ts-node tsconfig-paths
          
      - name: Clean build artifacts
        run: |
          rm -f static/*.js
          rm -rf test-results/custom-report/
          rm -rf playwright-report/
          
      - name: Run Playwright tests with ts-node
        env:
          PLAYWRIGHT_HEADLESS: true
          DEBUG: pw:api,pw:browser*
          NODE_TLS_REJECT_UNAUTHORIZED: '0'
        run: |
          ls -la static/
          PWDEBUG=1 NODE_OPTIONS="-r ts-node/register" npx playwright test -c playwright.config.ts static/HomepageTest.spec.ts static/RegistrationPageTest.spec.ts --debug --retries=2 --workers=1
        
      - name: List test results
        if: always()
        run: |
          ls -la
          ls -la test-results/ || true
          ls -la test-results/custom-report/ || true
          cat playwright-report/results.json || true
        
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: |
            test-results/custom-report/
            playwright-report/
        
  deploy:
    needs: test
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Clean deployment directory
        run: |
          rm -rf ./*
          
      - name: Download test results
        uses: actions/download-artifact@v4
        with:
          name: test-report
          
      - name: List files
        run: ls -la
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
